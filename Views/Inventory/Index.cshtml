@model IEnumerable<BooksOnLoan.Models.Book>

@{
    ViewData["Title"] = "Index";
    var bookTransactionCount = ViewData["BookTransactionCounts"] as Dictionary<int, int>;
}

<p>    
    @if(ViewBag.OverdueCount > 0)
    {
        <script>
            function overdueNotify() {
                $(document).ready(function(){
                    $('#receiveNoteModal').modal('show');
                });
            }

            window.onload = overdueNotify;
        </script>
    }
</p>

<h1>Book Inventory Catalog</h1>

@if( User.IsInRole("Admin"))
{
<p>
    <a asp-action="Create">Add Book</a>
</p>
}

<component type="typeof(ItemList)" render-mode="ServerPrerendered" />

@*
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.YearPublished)
            </th>              
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>            
            <th>
                Available
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearPublished)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @if (bookTransactionCount!.ContainsKey(item.CodeNumber))
                {
                    @(item.Quantity - bookTransactionCount[item.CodeNumber])
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.Quantity)
                }
            <td>
                @if( User.IsInRole("Admin"))
                {
                <a asp-action="Edit" asp-route-id="@item.CodeNumber">Edit</a> 
                <a asp-action="Details" asp-route-id="@item.CodeNumber">Details</a> 
                <a asp-action="Delete" asp-route-id="@item.CodeNumber">Delete</a>
                }
                @if( User.IsInRole("Member") )
                {
                    if( (!bookTransactionCount!.ContainsKey(item.CodeNumber)) || (0 < item.Quantity - bookTransactionCount[item.CodeNumber] ))
                    {
                        <a asp-controller="Transaction" asp-action="Reserve" asp-route-id="@item.CodeNumber">Reserve</a>
                    }                
                }
            </td>
        </tr>
}
    </tbody>
</table>
*@
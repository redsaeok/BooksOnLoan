@model IEnumerable<BooksOnLoan.Models.Transaction>

@{
    ViewData["Title"] = "Transaction History";
    var overdueTransactions = ViewData["OverdueBooks"] as IEnumerable<Transaction>;
    var requestTransactions = ViewData["HeldBooks"] as IEnumerable<Transaction>;
    var outstandingTransactions = ViewData["SentBooks"] as IEnumerable<Transaction>;
    var memberReserveBooks = ViewData["MemberReserveBooks"] as IEnumerable<Transaction>;
    var memberHasBooks = ViewData["MemberHasBooks"] as IEnumerable<Transaction>;
}

<h1>@ViewData["Title"]</h1>

<p>
    
    @if(ViewBag.OverdueCount > 0)
    {
        <P>You have Overdue books</P>
        <script>
            function overdueNotify() {
                $(document).ready(function(){
                    $('#receiveNoteModal').modal('show');
                });
            }

            window.onload = overdueNotify;
        </script>
    }
    <!-- a asp-action="Create">Create New</a -->
</p>

@if (User.IsInRole("Admin"))
{

    <component type="typeof(AllOverdueBooks)" render-mode="ServerPrerendered" />
    <component type="typeof(AllBookHolds)" render-mode="ServerPrerendered" />
    <component type="typeof(AllBooksOnLoan)" render-mode="ServerPrerendered" />


}




@if (User.IsInRole("Member"))
{
    <component type="typeof(MyOverdueBooks)" render-mode="ServerPrerendered" />

    <component type="typeof(MyBookHolds)" render-mode="ServerPrerendered" />

    <component type="typeof(MyBooksOnLoan)" render-mode="ServerPrerendered" />

    <component type="typeof(MyLoanHistory)" render-mode="ServerPrerendered" />
}


